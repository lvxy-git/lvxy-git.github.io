(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{527:function(a,t,e){"use strict";e.r(t);var s=e(7),i=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"写在前面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#写在前面"}},[a._v("#")]),a._v(" 写在前面")]),a._v(" "),e("p",[a._v("因为工作需要进行手机App的iOS端自动化测试，所以特来学习工具Appium的使用。")]),a._v(" "),e("h1",{attrs:{id:"mac下的环境搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac下的环境搭建"}},[a._v("#")]),a._v(" Mac下的环境搭建")]),a._v(" "),e("h2",{attrs:{id:"xcode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xcode"}},[a._v("#")]),a._v(" Xcode")]),a._v(" "),e("p",[a._v("本文的系统版本为Mac 10.13.6，使用Xcode 10.0，在 App Store 里获取即可：")]),a._v(" "),e("img",{attrs:{src:a.$withBase("/images/xcode_download.png"),alt:"foo"}}),a._v(" "),e("h3",{attrs:{id:"command-line-tools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#command-line-tools"}},[a._v("#")]),a._v(" Command Line Tools")]),a._v(" "),e("p",[a._v("Command Line Tools是在Xcode中的一款工具，可以在命令行中运行C程序，Xcode 默认是不会安装它的。")]),a._v(" "),e("p",[a._v("在Terminal中输入以下指令安装：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("xcode-select --install\n")])])]),e("h2",{attrs:{id:"brew"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#brew"}},[a._v("#")]),a._v(" brew")]),a._v(" "),e("p",[a._v("brew是Mac下的一个软件包管理工具,非常方便,免去了自己手动编译安装的不便。")]),a._v(" "),e("p",[a._v("在Terminal中输入以下指令安装：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n')])])]),e("h2",{attrs:{id:"node-js-npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js-npm"}},[a._v("#")]),a._v(" Node.js & npm")]),a._v(" "),e("p",[a._v("Node.js是一个Javascript运行环境(runtime environment)。")]),a._v(" "),e("p",[a._v("而npm(node package manager)是随同Node.js一起安装的包管理工具，能解决Node.js代码部署上的很多问题。")]),a._v(" "),e("p",[a._v("在Terminal中输入以下指令一并安装：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("brew install node\n")])])]),e("h2",{attrs:{id:"carthege"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#carthege"}},[a._v("#")]),a._v(" Carthege")]),a._v(" "),e("p",[a._v("Carthage 是一款使用于 Swift 语言编写，只支持动态框架，只支持 iOS8+的Cocoa依赖管理工具。")]),a._v(" "),e("p",[a._v("在Terminal中输入以下指令安装：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("brew install Carthage\n")])])]),e("h2",{attrs:{id:"其他依赖库安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他依赖库安装"}},[a._v("#")]),a._v(" 其他依赖库安装")]),a._v(" "),e("p",[a._v("在Terminal中输入以下指令安装：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("brew install libimobiledevice --HEAD\nnpm install -g ios-deploy  # 如果是iOS10以上的系统才需要安装\n")])])]),e("p",[a._v("如果没有安装 libimobiledevice，会导致Appium无法连接到iOS的设备，所以必须要安装，如果要在iOS10+的系统上使用appium，则需要安装ios-deploy")]),a._v(" "),e("h2",{attrs:{id:"python"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[a._v("#")]),a._v(" Python")]),a._v(" "),e("p",[a._v("Python 3.7 下载地址：")]),a._v(" "),e("p",[a._v("https://www.python.org/downloads/mac-osx")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-7c074eb820998d5a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),e("h3",{attrs:{id:"pycharm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pycharm"}},[a._v("#")]),a._v(" Pycharm")]),a._v(" "),e("p",[a._v("Pycharm是一款Python IDE，编写脚本所用。")]),a._v(" "),e("p",[a._v("PyCham 下载地址：")]),a._v(" "),e("p",[a._v("http://www.jetbrains.com/pycharm/download/#section=windows")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-524eed4d0b7886af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),e("ul",[e("li",[a._v("具体激活方法可自行百度")])]),a._v(" "),e("h2",{attrs:{id:"appium"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#appium"}},[a._v("#")]),a._v(" Appium")]),a._v(" "),e("p",[a._v("Appium是一个自动化测试开源工具，支持iOS和android平台上的移动原生应用、移动Web应用和混合应用。Appium是一个跨平台工具，它允许测试人员使用同样的接口、基于不同的平台写自动化测试代码，大大增加了测试套件间代码的复用性。")]),a._v(" "),e("p",[a._v("官网：http://appium.io")]),a._v(" "),e("p",[a._v("Github：http://github.com/appium/appium")]),a._v(" "),e("h3",{attrs:{id:"appium-desktop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#appium-desktop"}},[a._v("#")]),a._v(" Appium-Desktop")]),a._v(" "),e("p",[a._v("下载地址：https://github.com/appium/appium-desktop/releases/tag/v1.7.1")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-27c2c52f2c98b6df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),e("h3",{attrs:{id:"appium-python-client"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#appium-python-client"}},[a._v("#")]),a._v(" Appium Python-Client")]),a._v(" "),e("p",[a._v("Appium客户端依赖库支持Python、Ruby、Java、Javascript、PHP、C#等，本文使用Python，就安装Appium-Python-Client。")]),a._v(" "),e("p",[a._v("在Terminal中输入以下指令安装：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("pip install Appium-Python-Client\n")])])]),e("h3",{attrs:{id:"appium-doctor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#appium-doctor"}},[a._v("#")]),a._v(" Appium-Doctor")]),a._v(" "),e("p",[a._v("Appium-Doctor用于检测Appium运行环境是否搭建完成。")]),a._v(" "),e("p",[a._v("在Terminal中输入以下指令安装：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm install appium-doctor -g\n")])])]),e("p",[a._v("安装后执行"),e("code",[a._v("appium-doctor --ios")]),a._v("指令，可以查看与iOS相关配置是否完整，下图是全部配置都成功，如果有哪一项是打叉的，则对应进行安装就可以了。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-690bd67112f1950a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),e("h2",{attrs:{id:"webdriveragent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webdriveragent"}},[a._v("#")]),a._v(" WebDriverAgent")]),a._v(" "),e("p",[a._v("Github：https://github.com/facebook/WebDriverAgent")]),a._v(" "),e("p",[a._v("iOS 10+使用的是XCUITest，Appium使用的模块是appium-xcuitest-driver，其中引用了Facebook提供的WDA方案来驱动iOS的测试。装Appium Desktop的时候，原生的WDA无法使用，需要从Facebook那里clone一份。")]),a._v(" "),e("p",[a._v("在Terminal中输入以下指令:")]),a._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[a._v("git clone https"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//github.com/facebook/WebDriverAgent.git")]),a._v("\n")])])]),e("p",[a._v("clone完后进入该目录下执行指令")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cd WebDriveAgent\n./Scripts/bootstrap.sh\n")])])]),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-de41a01c34d49511.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),e("p",[a._v("下载编译完成后，直接用Xcode打开WebDriverAgent.xcodepro文件。")]),a._v(" "),e("p",[a._v("配置WebDriverAgentLib和WebDriverAgentRunner的证书：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-f89956c3882b67f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"WebDriverAgentLib"}})]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-260d8ba377a63fad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"WebDriverAgentRunner"}})]),a._v(" "),e("p",[a._v("成功生成Signing Certificate之后，将Scheme改为WebDriverAgentRunner，Destination改为你的iPhone：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-9c4a2e11c6f22f29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),e("p",[a._v("连接你的iPhone，按下Command + U，进行Test，再按下Command + Shift + C 调出 Activate Console查看调试信息：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-45396ec5b4b69678.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),e("p",[a._v("若显示上述信息则运行成功")]),a._v(" "),e("p",[a._v("因为国内iPhone不能直接访问返回的地址，所以需要进行端口转接，在Terminal中运行以下指令：\n安装 iproxy")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm install -g iproxy\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("iproxy 8100 8100\n")])])]),e("p",[a._v("在浏览器输入 localhost:8100/status ，若成功访问且返回JSON格式数据则表示配置成功：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-0cf1554f5dff9a06.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),e("p",[a._v("接下来用配置好的WebDriverAgent替换Appium自带的WDA，在Terminal中运行以下指令：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cd /usr/local/lib/node_modules/appium/node_modules/appium-webdriveragent\nmv appium-webdriveragent appium-webdriveragent2  # 将Appium自带的WDA改名\nln -s ~/WebDriverAgent-master appium-webdriveragent  # 用Facebook的WDA替换进去\n")])])]),e("p",[a._v("下载测试用程序：")]),a._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[a._v("git clone https"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//github.com/appium-boneyard/sample-code.git")]),a._v("\n")])])]),e("p",[a._v("打开Appium-Desktop，点击 Start Server，Host 和 Port 使用默认设置即可，点击右上角放大镜按钮(Start Inspector Session)，配置如下属性：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14225676-99ba2752f89ec61c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('{\n  "platformName": "iOS",  # 测试平台名称\n  "platformVersion": "12.0", # iPhone 版本\n  "deviceName": "iPhone", # 设备名称\n  "udid": "90a007e58e6a68519d3793a4371fb804c3c8df9c", # UDID\n  "antomationName": "XCUITest", # 自动化工具名称\n  "app": "/Users/administrator/sample-code/sample-code/apps/TestApp/build/Release-iphonesimulator/TestApp-iphonesimulator.app",  # app路径\n  "noReset": true # 若app已存在，则不重新安装\n}\n')])])]),e("p",[a._v("点下 Start Session，等待一段时间后手机会安装指定的app，Mac上会弹出Inspector显示屏幕以及定位的原素：")]),a._v(" "),e("p",[a._v("ok，到这一步环境基本搭建完成了，下一章将介绍脚本如何运行")]),a._v(" "),e("h1",{attrs:{id:"遇到的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#遇到的问题"}},[a._v("#")]),a._v(" 遇到的问题")]),a._v(" "),e("p",[a._v("许多问题都可以通过重启Mac或者iPhone解决。")])])}),[],!1,null,null,null);t.default=i.exports}}]);